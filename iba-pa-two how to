/*npm react-router-dom*/


1. Folder Structure

src\components\:
Layout.jsx
Home.jsx
About.jsx

"Layout.js"

import { Outlet, Link } from "react-router-dom";
const Layout = () => {
  return (
    <>
      <nav>
        <ul>
          <li> <Link to="/">Home</Link> </li>
          <li> <Link to="/about">About</Link> </li>
        </ul>
      </nav>
      <Outlet />
    </>
  )
};
export default Layout;

"Home.js"

function Home() {
    return <h1 >This is the home page</h1>;
}
export default Home;

"About.js" 

function About() {
    return <h1>This is the about page</h1>;
}
export default About;


2. React Router Basic Usage (App.js)

import { BrowserRouter, Routes, Route } from "react-router-dom";
import Layout from "./components/Layout";
import Home from "./components/Home";
import About from "./components/About";

function App() {

  return (
  <BrowserRouter>
    <Routes>
      <Route path="/" element={<Layout />}>
        <Route index element={<Home />} />
        <Route path="about" element={<About />} />
      </Route>
    </Routes>
  </BrowserRouter>
  )
}

export default App;

3.Handling Forms

import React, { useState } from "react";
function App() {
  const [myCar, setMyCar] = useState("Volvo");
  return (
    <form>
      <select value={myCar} onChange={ (event) => setMyCar(event.target.value) }>
        <option value="Ford">Ford</option>
        <option value="Volvo">Volvo</option>
        <option value="Fiat">Fiat</option>
      </select>
      <p>Selected: { myCar }</p>
    </form>
  )
}

export default App;

4. React Hooks
import React, { useState } from "react";
function App() {
  const [color, setColor] = useState("red");
  return (
    <div>
      <h1>My favorite color is {color}!</h1>
      <button type="button" onClick={() => setColor("blue")}>Blue</button>
      <button type="button" onClick={() => setColor("red")}>Red</button>
    </div>
  );
}

useState Hook -  import { useState } from "react";
Initialize useState - const [color, setColor] = useState("");

5. Read State
 function FavoriteColor() {
   const [color, setColor] = useState("red");
   return <h1>My favorite color is {color}!</h1>
 }

6. Update State 
import React, { useState } from "react";
function App() {
  const [color, setColor] = useState("red");
  return (
     <div>
       <h1>My favorite color is {color}!</h1>
       <button type="button" 
 onClick={() => setColor("blue")}>Blue</button>
 </div>
  );
}


/*useEffect(<function>, <dependency>)*/

1.useEffect Hooks 

1.1 useEffect Hooks

An empty array:
 useEffect(() => {
   //Runs only on the first render
 }, []);
No dependency passed:
 useEffect(() => {
   //Runs on every render
 });

1.2 useEffect Hooks Example

import { useState, useEffect } from "react";
function Timer() {
  const [count, setCount] = useState(0);
  // run only on first render
  useEffect(() => {
    setTimeout(() => {
      setCount((count) => count + 1);
    }, 1000);
  }, []);
  return <h1>I've rendered {count} times!</h1>;
}

useEffect dependent on variable Example

1.3 import { useState, useEffect } from "react";
function Test() {
    const [count, setCount] = useState(0);
    const [calculation, setCalculation] = useState(0);
    useEffect(() => {
      setCalculation(() => count * 2);
    }, [count]); // <- add the count variable here
    return (
      <>
        <p>Count: {count}</p>
        <button onClick={() => setCount((c) => c + 1)}>+</button>
        <p>Calculation: {calculation}</p>
      </>
    );
}
export default Test;
